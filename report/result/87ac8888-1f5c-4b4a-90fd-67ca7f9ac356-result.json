{"name": "test_run[run_case0]", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "cmdopt = \"{'host': '127.0.0.1', 'port': '4723', 'bpport': '4724', 'udid': 'MBJVB20628004068'}\"\n\n    @pytest.fixture(scope=\"session\")\n    def start_appium_desired(cmdopt):\n    \n        opt = eval(cmdopt)\n        # # {\"host\":\"127.0.0.1\",\n        # #          \"port\":\"4723\",\n        # #          \"bpport\":\"4724\",\n        # #         \"udid\":None}\n        host = opt[\"host\"]\n        print(host)\n        port = opt[\"port\"]\n        print(port)\n        bpport = opt[\"bpport\"]\n        print(bpport)\n        udid = opt[\"udid\"]\n        print(udid)\n        # system_port = opt[\"systemPort\"]\n        driver = None\n        if udid in get_devices():\n            #放入 端口连接参数\n            appium_start(host, port, bpport, udid)\n            time.sleep(5)\n            if not check_port():\n                print(host)\n                print(port)\n>               driver = appium_desired_caps(host, port)\n\ntestcase\\conftest.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nhost = '127.0.0.1', port = '4723'\n\n    def appium_desired_caps(host, port):\n        desired_caps = dict()\n        # 3.platformName\n        desired_caps['platformName'] = data['platformName']\n    \n        # 4.platformVesion\n        desired_caps['platfromVersion'] = data['platfromVersion']\n        print(\"11\")\n    \n        # 5.deviceName\n        desired_caps['deviceName'] = data['deviceName']\n        print(\"12\")\n        # 6.启动程序的报名 appPackage    # 通过 adb shell dumpsys window|grep mCurrentFocus 获取\n        desired_caps['appPackage'] = data['appPackage']\n        print(\"13\")\n        # 7.启动界面名appActivity\n        desired_caps['appActivity'] = data['appActivity']\n        print(\"14\")\n        # 获取toast automationName = uiautomator2\n        desired_caps[\"automationName\"] = data['automationName']\n        print(\"15\")\n    \n        # 不清除app里的原有数据\n        desired_caps[\"noReset\"] = True\n        print(\"16\")\n        # 8.使用http，链接appium服务器\n>       driver = webdriver.Remote('http://localhost:%s/wd/hub' % (host, port), desired_caps)  # IP地址是Appium中的监听地址\nE       TypeError: not all arguments converted during string formatting\n\nbase\\DesireCaps.py:41: TypeError"}, "attachments": [{"name": "log", "source": "e9ed0c31-72e5-40dc-855d-e6f0196bd3fa-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "run_case", "value": "{'TC_ID': 'TC_Login_renew', 'CASE_ID': 'Case_011', '是否运行': 'y', '用例名称': '登录续费', '测试数据': 'username=13333333333,password=ty123456', '期望结果': '', '备注': '进行登录续费', '描述': '登录续费'}"}], "start": 1618538212350, "stop": 1618538212350, "uuid": "a0480cf6-2642-46dd-a9e2-7fb487b645b5", "historyId": "09d1def909cb056249b96d75b8c275b2", "testCaseId": "d0da37f9ca5c76a26b8f92b7592b9368", "fullName": "testcase.TestKeywords.TestKeyword#test_run", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "TestKeywords"}, {"name": "subSuite", "value": "TestKeyword"}, {"name": "host", "value": "hanlizhi-pc"}, {"name": "thread", "value": "8220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.TestKeywords"}]}