{"name": "Case_006-购买星动手机", "status": "broken", "statusDetails": {"message": "KeyError: ')'", "trace": "self = <testcase.TestKeywords.TestKeyword object at 0x000001C343694908>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"1c8ed7dc-9669-4138-89aa-e60a595a180a\")>\nrun_case = {'CASE_ID': 'Case_006', 'TC_ID': 'TC_Purchase', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n    \n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:238: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:232: in get_err_screenshot\n    func(self, *args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.operate.KeywordOperatePytest.Operate object at 0x000001C3436CB7B8>\ndata = <base.ExcelData.Data object at 0x000001C342B9EB00>\nrun_case = {'CASE_ID': 'Case_006', 'TC_ID': 'TC_Purchase', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程', ...}\n\n    @screenshot_allure #装饰器\n    def step(self, data, run_case):\n        tc_id = run_case[TestSteps.STEP_TC_ID]\n        # 获取步骤\n        steps = data.get_steps_by_tc_id(tc_id)\n        # allure 报告\n        # feature 一级标题\n        allure.dynamic.feature(run_case[TestCases.CASES_NOTE])\n        # story 二级标题\n        allure.dynamic.story(run_case[TestCases.CASES_DESC])\n    \n        # title 标题\n        allure.dynamic.title(run_case[CaseData.DATA_CASE_ID] + \"-\" + run_case[CaseData.DATA_NAME])\n    \n        for step in steps:\n            log.debug(\"执行步骤{}\".format(step))\n            # 获取元素信息\n            elements = step[TestSteps.STEP_ELEMENT_NAME]\n            element = data.get_elements_by_element(step[TestSteps.STEP_TC_ID], elements)\n            log.debug(\"元素信息{}\".format(element))\n            # 操作步骤 关键表映射 click_btn\n            operate = self.get_keyword(step[TestSteps.STEP_OPERATE])\n    \n            # 操作判断，是否存在， 不存在不执行\n            if operate:\n                # 定义方法参数：字典\n                param_value = dict()\n                # 根据getattr判断执行那个方法\n                action_method = getattr(Action(self.driver), operate)\n                log.debug(\"该关键字是{}\".format(operate))\n    \n                # 定义具体参数\n                by = element[Elements.ELE_BY]\n                value = element[Elements.ELE_VALUE]\n    \n                # 1、获取by,value,send_value内容\n                send_value = step[TestSteps.STEP_DATA]\n                send_slid = step[TestSteps.STEP_SLIDE]\n                send_COORD = step[TestSteps.STEP_COORD]\n                send_note = step[TestSteps.STEP_NOTE]\n                # 2、send_value内容转换，通过case data数据内容\n    \n                expect = run_case[CaseData.DATA_EXPECT_RESULT]\n                param_value[\"by\"] = by\n                param_value[\"value\"] = value\n                param_value[\"expect\"] = expect\n                #映射 自动滑动\n                param_value[\"slid\"] = send_slid\n    \n                # 判断 加入有输入 内容 字符转换\n                if send_value:\n                    data_input = run_case[CaseData.DATA_INPUT]\n                    send = self.str_to_dict(data_input)\n    \n                    param_value[\"send\"] = send[send_value]\n                if send_COORD:\n                    slid = self.str_to_dict(send_COORD)\n                    # 映射 定位点击\n                    param_value[\"tap\"] = slid\n                # if send_note:\n                #     data_mobile = run_case[CaseData.DATA_INPUT]\n                #     send = self.str_to_dict(data_mobile)\n                #     param_value[\"note\"] = send_note\n                #     phone = send.get(\"username\")\n                #     # # print(phone)\n                #     param_value[\"mobile\"] = phone\n                #     param_value[\"id\"] = by\n                if send_note:\n                    tunnelDB = MysqlConnect('192.168.199.243', 3306, 'cloud', 'Cloud.123456', 'cloud')\n                    data_mobile = run_case[CaseData.DATA_INPUT]\n                    send = self.str_to_dict(data_mobile)\n                    param_value[\"note\"] = send_note\n                    phone = send.get(\"username\")\n                    #     # # print(phone)\n                    #     param_value[\"mobile\"] = phone\n                    #     param_value[\"id\"] = by\n                    if send_note == \"注册\":\n                        # 注册验证码\n                        sql = 'SELECT regist FROM t_user_phonecode WHERE phone =%s' % phone\n                        results = tunnelDB.select(sql)\n                    elif send_note == \"登陆\":\n                        # 登陆验证码\n                        sql = 'SELECT login FROM t_user_phonecode WHERE phone =%s' % phone\n                        results = tunnelDB.select(sql)\n                    elif send_note == \"找回\":\n                        # 密码找回验证码\n                        sql = 'SELECT passwd_back FROM t_user_phonecode WHERE phone =%s' % phone\n                        results = tunnelDB.select(sql)\n                    elif send_note == \"绑定新手机\":\n                        # 绑定新手机验证码\n                        sql = 'SELECT modify FROM t_user_phonecode WHERE phone =%s' % phone\n                        results = tunnelDB.select(sql)\n                    tonote = self.str_to_note(results)\n>                   param_value[\"send\"] = send[tonote]\nE                   KeyError: ')'\n\ntestcase\\operate\\KeywordOperatePytest.py:166: KeyError"}, "steps": [{"name": "输入用户名", "status": "passed", "start": 1618022805543, "stop": 1618022807892}, {"name": "输入密码", "status": "passed", "start": 1618022807894, "stop": 1618022809565}], "attachments": [{"name": "2021-04-10 10:46:49", "source": "f31f30af-51ea-4f5f-823a-7dbb09101a6f-attachment.png", "type": "image/png"}, {"name": "log", "source": "798fa2bb-e0cd-4214-817a-b847bac895f9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "run_case", "value": "{'TC_ID': 'TC_Purchase', 'CASE_ID': 'Case_006', '是否运行': 'y', '用例名称': '购买星动手机', '测试数据': 'username=13333333333,password=ty123456', '期望结果': '', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程'}"}], "start": 1618022804143, "stop": 1618022809732, "uuid": "9b4cd53d-97df-4d9d-b93a-5147d24b5d9e", "historyId": "09d1def909cb056249b96d75b8c275b2", "testCaseId": "d0da37f9ca5c76a26b8f92b7592b9368", "fullName": "testcase.TestKeywords.TestKeyword#test_run", "labels": [{"name": "feature", "value": "购买云手机功能测试"}, {"name": "story", "value": "购买星动云手机流程"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "TestKeywords"}, {"name": "subSuite", "value": "TestKeyword"}, {"name": "host", "value": "hanlizhi-pc"}, {"name": "thread", "value": "16376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.TestKeywords"}]}