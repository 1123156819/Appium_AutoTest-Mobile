{"name": "Case_002-登录成功", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'get_screenshot_as_png'", "trace": "self = <testcase.operate.KeywordOperatePytest.Operate object at 0x000001F6BE2A5588>\nargs = (<base.ExcelData.Data object at 0x000001F6BD7FE7B8>, {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录测试', ...})\nkwargs = {}\n\n    def get_err_screenshot(self, *args, **kwargs):\n        # 2 定义内部函数、拍图操作\n        try:\n>           func(self, *args, **kwargs)\n\nbase\\BaseAction.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.operate.KeywordOperatePytest.Operate object at 0x000001F6BE2A5588>\ndata = <base.ExcelData.Data object at 0x000001F6BD7FE7B8>\nrun_case = {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录测试', ...}\n\n    @screenshot_allure #装饰器\n    def step(self, data, run_case):\n        tc_id = run_case[TestSteps.STEP_TC_ID]\n        # 获取步骤\n        steps = data.get_steps_by_tc_id(tc_id)\n        # allure 报告\n        # feature 一级标题\n        allure.dynamic.feature(run_case[TestCases.CASES_NOTE])\n        print(run_case[TestCases.CASES_NOTE])\n        # story 二级标题\n        allure.dynamic.story(run_case[TestCases.CASES_DESC])\n        print(run_case[TestCases.CASES_DESC])\n        # title 标题\n        allure.dynamic.title(run_case[CaseData.DATA_CASE_ID] + \"-\" + run_case[CaseData.DATA_NAME])\n        print(run_case[CaseData.DATA_CASE_ID] + \"-\" + run_case[CaseData.DATA_NAME])\n        for step in steps:\n            log.debug(\"执行步骤{}\".format(step))\n            # 获取元素信息\n            elements = step[TestSteps.STEP_ELEMENT_NAME]\n            element = data.get_elements_by_element(step[TestSteps.STEP_TC_ID], elements)\n            log.debug(\"元素信息{}\".format(element))\n            # 操作步骤 关键表映射 click_btn\n            operate = self.get_keyword(step[TestSteps.STEP_OPERATE])\n    \n            # 操作判断，是否存在， 不存在不执行\n            if operate:\n                # 定义方法参数：字典\n                param_value = dict()\n                # 根据getattr判断执行那个方法\n                action_method = getattr(Action(self.driver), operate)\n                log.debug(\"该关键字是{}\".format(operate))\n    \n                # 定义具体参数\n                by = element[Elements.ELE_BY]\n                value = element[Elements.ELE_VALUE]\n                # 1、获取by,value,send_value内容\n                send_value = step[TestSteps.STEP_DATA]\n                # 2、send_value内容转换，通过case data数据内容\n    \n                expect = run_case[CaseData.DATA_EXPECT_RESULT]\n                param_value[\"by\"] = by\n                param_value[\"value\"] = value\n    \n                param_value[\"expect\"] = expect\n                # 判断 加入有输入 内容 字符转换\n                if send_value:\n                    data_input = run_case[CaseData.DATA_INPUT]\n                    send = self.str_to_dict(data_input)\n                    param_value[\"send\"] = send[send_value]\n                with allure.step(step[TestSteps.STEP_NAME]):\n>                   action_method(**param_value)\n\ntestcase\\operate\\KeywordOperatePytest.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x000001F6BE2CA828>\nkwargs = {'by': 'id', 'expect': '登陆', 'send': '17700000007', 'value': 'com.gemini.cloud.client:id/et_account'}\nby = 'id', value = 'com.gemini.cloud.client:id/et_account', loc = None\n\n    def by_id_send_keys(self, **kwargs):\n        \"\"\"\n        通过id定位元素发送内容\n        :param by:\n        :param value:\n        :param send_value:\n        :return:\n        \"\"\"\n        # self.by_find_element(By.ID, value).send_keys(send_value)\n        by, value = kwargs[\"by\"], kwargs[\"value\"]\n        if by == \"id\":\n            loc = self.by_id(value)\n        elif by == \"xpath\":\n            loc = self.by_xpath(value)\n>       loc.click()\nE       AttributeError: 'NoneType' object has no attribute 'click'\n\nbase\\BaseAction.py:54: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.TestKeywords.TestKeyword object at 0x000001F6BE2A5C50>\nstart_appium_desired = None\nrun_case = {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        print(\"1\")\n        # self.driver.launch_app()\n        print(\"2\")\n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.operate.KeywordOperatePytest.Operate object at 0x000001F6BE2A5588>\nargs = (<base.ExcelData.Data object at 0x000001F6BD7FE7B8>, {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录测试', ...})\nkwargs = {}\n\n    def get_err_screenshot(self, *args, **kwargs):\n        # 2 定义内部函数、拍图操作\n        try:\n            func(self, *args, **kwargs)\n        except Exception as e:\n>           png = self.driver.get_screenshot_as_png()\nE           AttributeError: 'NoneType' object has no attribute 'get_screenshot_as_png'\n\nbase\\BaseAction.py:121: AttributeError"}, "steps": [{"name": "输入用户名", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'click'\n", "trace": "  File \"D:\\appiumdm\\Appium_AutoTest\\testcase\\operate\\KeywordOperatePytest.py\", line 107, in step\n    action_method(**param_value)\n  File \"D:\\appiumdm\\Appium_AutoTest\\base\\BaseAction.py\", line 54, in by_id_send_keys\n    loc.click()\n"}, "start": 1617776527163, "stop": 1617776527163}], "attachments": [{"name": "log", "source": "8aa5d8f7-47f3-4e98-9aff-bd6ce7d0c75e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "run_case", "value": "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_002', '是否运行': 'y', '用例名称': '登录成功', '测试数据': 'username=17700000007,password=12345678', '期望结果': '登陆', '备注': '登录功能测试', '描述': '登录测试'}"}], "start": 1617776527154, "stop": 1617776527188, "uuid": "6fb2d730-928a-4289-89bb-206b994f5306", "historyId": "09d1def909cb056249b96d75b8c275b2", "testCaseId": "d0da37f9ca5c76a26b8f92b7592b9368", "fullName": "testcase.TestKeywords.TestKeyword#test_run", "labels": [{"name": "feature", "value": "登录功能测试"}, {"name": "story", "value": "登录测试"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "TestKeywords"}, {"name": "subSuite", "value": "TestKeyword"}, {"name": "host", "value": "hanlizhi-pc"}, {"name": "thread", "value": "16580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.TestKeywords"}]}