{
  "uid" : "f6486336d7a81de0",
  "name" : "Case_001-登录失败",
  "fullName" : "testcase.TestKeywords.TestKeyword#test_run",
  "historyId" : "09d1def909cb056249b96d75b8c275b2",
  "time" : {
    "start" : 1617698576510,
    "stop" : 1617698586012,
    "duration" : 9502
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x000002A75573E0B8>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"1e0007fa-2146-41ee-a057-839aaa0570cc\")>\nrun_case = {'CASE_ID': 'Case_001', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:125: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:119: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:107: in step\n    action_method(**param_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x000002A7556C4828>\nkwargs = {'by': 'xpath', 'expect': '错误', 'value': '//*[contains(@text,\\'\" + text + \"\\')]'}\ntoast_result = True\n\n    def assert_toast_result(self, **kwargs):\n        toast_result = self.is_toast_get_toast(**kwargs)\n>       assert toast_result == False\nE       AssertionError\n\nbase\\BaseAction.py:103: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "cmdopt",
    "time" : {
      "start" : 1617698557332,
      "stop" : 1617698557332,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "start_appium_desired",
    "time" : {
      "start" : 1617698557332,
      "stop" : 1617698576509,
      "duration" : 19177
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "xunit_setup_class_fixture_TestKeyword",
    "time" : {
      "start" : 1617698576509,
      "stop" : 1617698576509,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x000002A75573E0B8>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"1e0007fa-2146-41ee-a057-839aaa0570cc\")>\nrun_case = {'CASE_ID': 'Case_001', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:125: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:119: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:107: in step\n    action_method(**param_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x000002A7556C4828>\nkwargs = {'by': 'xpath', 'expect': '错误', 'value': '//*[contains(@text,\\'\" + text + \"\\')]'}\ntoast_result = True\n\n    def assert_toast_result(self, **kwargs):\n        toast_result = self.is_toast_get_toast(**kwargs)\n>       assert toast_result == False\nE       AssertionError\n\nbase\\BaseAction.py:103: AssertionError",
    "steps" : [ {
      "name" : "输入用户名",
      "time" : {
        "start" : 1617698579916,
        "stop" : 1617698581431,
        "duration" : 1515
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入密码",
      "time" : {
        "start" : 1617698581432,
        "stop" : 1617698583289,
        "duration" : 1857
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "点击登录",
      "time" : {
        "start" : 1617698583290,
        "stop" : 1617698583934,
        "duration" : 644
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "获取验证",
      "time" : {
        "start" : 1617698583935,
        "stop" : 1617698585205,
        "duration" : 1270
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"D:\\appiumdm\\Appium_AutoTest\\testcase\\operate\\KeywordOperatePytest.py\", line 107, in step\n    action_method(**param_value)\n  File \"D:\\appiumdm\\Appium_AutoTest\\base\\BaseAction.py\", line 103, in assert_toast_result\n    assert toast_result == False\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "aec715a34165a386",
      "name" : "2021-04-06 16:43:06",
      "source" : "aec715a34165a386.png",
      "type" : "image/png",
      "size" : 57418
    }, {
      "uid" : "b5a2db738ad68c70",
      "name" : "log",
      "source" : "b5a2db738ad68c70.txt",
      "type" : "text/plain",
      "size" : 2475
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "hasContent" : true,
    "stepsCount" : 4
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestKeyword::0",
    "time" : {
      "start" : 1617698586387,
      "stop" : 1617698586388,
      "duration" : 1
    },
    "status" : "broken",
    "statusMessage" : "AttributeError: type object 'TestKeyword' has no attribute 'driver'\n",
    "statusTrace" : "  File \"D:\\daima\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\daima\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 941, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\daima\\venv\\lib\\site-packages\\_pytest\\python.py\", line 815, in xunit_setup_class_fixture\n    _call_with_optional_argument(func, self.obj)\n  File \"D:\\daima\\venv\\lib\\site-packages\\_pytest\\python.py\", line 739, in _call_with_optional_argument\n    func(arg)\n  File \"D:\\appiumdm\\Appium_AutoTest\\testcase\\TestKeywords.py\", line 43, in teardown_class\n    self.driver.quit()\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "hasContent" : true,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "登录功能测试"
  }, {
    "name" : "story",
    "value" : "登录测试"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "TestKeywords"
  }, {
    "name" : "subSuite",
    "value" : "TestKeyword"
  }, {
    "name" : "host",
    "value" : "hanlizhi-pc"
  }, {
    "name" : "thread",
    "value" : "11316-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.TestKeywords"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "run_case",
    "value" : "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_001', '是否运行': 'y', '用例名称': '登录失败', '测试数据': 'username=13129559867,password=123456', '期望结果': '错误', '备注': '登录功能测试', '描述': '登录测试'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f6486336d7a81de0.json",
  "parameterValues" : [ "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_001', '是否运行': 'y', '用例名称': '登录失败', '测试数据': 'username=13129559867,password=123456', '期望结果': '错误', '备注': '登录功能测试', '描述': '登录测试'}" ]
}