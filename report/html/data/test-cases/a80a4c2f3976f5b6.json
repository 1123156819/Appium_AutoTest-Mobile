{
  "uid" : "a80a4c2f3976f5b6",
  "name" : "Case_006-购买星动手机",
  "fullName" : "testcase.TestKeywords.TestKeyword#test_run",
  "historyId" : "09d1def909cb056249b96d75b8c275b2",
  "time" : {
    "start" : 1618025175871,
    "stop" : 1618025182122,
    "duration" : 6251
  },
  "status" : "broken",
  "statusMessage" : "ValueError: invalid literal for int() with base 10: ',),)'",
  "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x000001F58F9149B0>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"e3ff550c-b922-47d8-8b54-9930bce1fa48\")>\nrun_case = {'CASE_ID': 'Case_006', 'TC_ID': 'TC_Purchase', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n    \n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:238: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:232: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:166: in step\n    tonote = self.str_to_note(results)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.operate.KeywordOperatePytest.Operate object at 0x000001F58F94B940>\ncontent = (('866519',),)\n\n    def str_to_note(self,content):\n        # 3、字符串转换成字典\n        # 1 通过, 分隔得到username=13718418200 password= 123456\n        res = {}\n        # 2 通过 = 分割\n    \n        a = 0\n        for i in str(content).split(\"'\"):\n            if i != \",\":\n                a = str(i)\n>       c = int(a)\nE       ValueError: invalid literal for int() with base 10: ',),)'\n\ntestcase\\operate\\KeywordOperatePytest.py:67: ValueError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "cmdopt",
    "time" : {
      "start" : 1618025163557,
      "stop" : 1618025163557,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "start_appium_desired",
    "time" : {
      "start" : 1618025163558,
      "stop" : 1618025175869,
      "duration" : 12311
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: invalid literal for int() with base 10: ',),)'",
    "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x000001F58F9149B0>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"e3ff550c-b922-47d8-8b54-9930bce1fa48\")>\nrun_case = {'CASE_ID': 'Case_006', 'TC_ID': 'TC_Purchase', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n    \n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:238: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:232: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:166: in step\n    tonote = self.str_to_note(results)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.operate.KeywordOperatePytest.Operate object at 0x000001F58F94B940>\ncontent = (('866519',),)\n\n    def str_to_note(self,content):\n        # 3、字符串转换成字典\n        # 1 通过, 分隔得到username=13718418200 password= 123456\n        res = {}\n        # 2 通过 = 分割\n    \n        a = 0\n        for i in str(content).split(\"'\"):\n            if i != \",\":\n                a = str(i)\n>       c = int(a)\nE       ValueError: invalid literal for int() with base 10: ',),)'\n\ntestcase\\operate\\KeywordOperatePytest.py:67: ValueError",
    "steps" : [ {
      "name" : "输入用户名",
      "time" : {
        "start" : 1618025177298,
        "stop" : 1618025179731,
        "duration" : 2433
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入密码",
      "time" : {
        "start" : 1618025179734,
        "stop" : 1618025181945,
        "duration" : 2211
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "b45bffc558dba07e",
      "name" : "2021-04-10 11:26:22",
      "source" : "b45bffc558dba07e.png",
      "type" : "image/png",
      "size" : 166063
    }, {
      "uid" : "77eae28b9aa396fb",
      "name" : "log",
      "source" : "77eae28b9aa396fb.txt",
      "type" : "text/plain",
      "size" : 2181
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "hasContent" : true,
    "stepsCount" : 2
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "购买云手机功能测试"
  }, {
    "name" : "story",
    "value" : "购买星动云手机流程"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "TestKeywords"
  }, {
    "name" : "subSuite",
    "value" : "TestKeyword"
  }, {
    "name" : "host",
    "value" : "hanlizhi-pc"
  }, {
    "name" : "thread",
    "value" : "9136-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.TestKeywords"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "run_case",
    "value" : "{'TC_ID': 'TC_Purchase', 'CASE_ID': 'Case_006', '是否运行': 'y', '用例名称': '购买星动手机', '测试数据': 'username=13333333333,password=ty123456', '期望结果': '', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "a80a4c2f3976f5b6.json",
  "parameterValues" : [ "{'TC_ID': 'TC_Purchase', 'CASE_ID': 'Case_006', '是否运行': 'y', '用例名称': '购买星动手机', '测试数据': 'username=13333333333,password=ty123456', '期望结果': '', '备注': '购买云手机功能测试', '描述': '购买星动云手机流程'}" ]
}