{
  "uid" : "8d4b88b82663a278",
  "name" : "Case_002-登录成功",
  "fullName" : "testcase.TestKeywords.TestKeyword#test_run",
  "historyId" : "09d1def909cb056249b96d75b8c275b2",
  "time" : {
    "start" : 1617846231457,
    "stop" : 1617846279011,
    "duration" : 47554
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x00000217EDF84128>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"0c3afbdb-8434-4985-bd4a-efab546d9729\")>\nrun_case = {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '自动登录测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n    \n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:127: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:121: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:106: in step\n    action_method(**param_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x00000217EE159390>\nkwargs = {'by': 'xpath', 'expect': '', 'value': '//*[contains(@text,\\'\" + text + \"\\')]'}\ntoast_result = True\n\n    def assert_toast_result(self, **kwargs):\n        toast_result = self.is_toast_get_toast(**kwargs)\n>       assert toast_result == False\nE       AssertionError\n\nbase\\BaseAction.py:105: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x00000217EDF84128>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"0c3afbdb-8434-4985-bd4a-efab546d9729\")>\nrun_case = {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '自动登录测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n    \n        log.info(\"执行用例内容{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:127: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:121: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:106: in step\n    action_method(**param_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x00000217EE159390>\nkwargs = {'by': 'xpath', 'expect': '', 'value': '//*[contains(@text,\\'\" + text + \"\\')]'}\ntoast_result = True\n\n    def assert_toast_result(self, **kwargs):\n        toast_result = self.is_toast_get_toast(**kwargs)\n>       assert toast_result == False\nE       AssertionError\n\nbase\\BaseAction.py:105: AssertionError",
    "steps" : [ {
      "name" : "输入用户名",
      "time" : {
        "start" : 1617846232869,
        "stop" : 1617846235304,
        "duration" : 2435
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入密码",
      "time" : {
        "start" : 1617846235305,
        "stop" : 1617846236977,
        "duration" : 1672
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "点击同意协议",
      "time" : {
        "start" : 1617846236978,
        "stop" : 1617846237609,
        "duration" : 631
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "点击登录",
      "time" : {
        "start" : 1617846237611,
        "stop" : 1617846248623,
        "duration" : 11012
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "获取验证",
      "time" : {
        "start" : 1617846248624,
        "stop" : 1617846278875,
        "duration" : 30251
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"D:\\appiumdm\\Appium_AutoTest\\testcase\\operate\\KeywordOperatePytest.py\", line 106, in step\n    action_method(**param_value)\n  File \"D:\\appiumdm\\Appium_AutoTest\\base\\BaseAction.py\", line 105, in assert_toast_result\n    assert toast_result == False\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "1f7f6c1d6e01c221",
      "name" : "2021-04-08 09:44:39",
      "source" : "1f7f6c1d6e01c221.png",
      "type" : "image/png",
      "size" : 83768
    }, {
      "uid" : "a642d383ce40acbd",
      "name" : "log",
      "source" : "a642d383ce40acbd.txt",
      "type" : "text/plain",
      "size" : 2918
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "hasContent" : true,
    "stepsCount" : 5
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "登录功能测试"
  }, {
    "name" : "story",
    "value" : "自动登录测试"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "TestKeywords"
  }, {
    "name" : "subSuite",
    "value" : "TestKeyword"
  }, {
    "name" : "host",
    "value" : "hanlizhi-pc"
  }, {
    "name" : "thread",
    "value" : "8708-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.TestKeywords"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "run_case",
    "value" : "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_002', '是否运行': 'y', '用例名称': '登录成功', '测试数据': 'username=13333333333,password=ty123456', '期望结果': '', '备注': '登录功能测试', '描述': '自动登录测试'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "8d4b88b82663a278.json",
  "parameterValues" : [ "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_002', '是否运行': 'y', '用例名称': '登录成功', '测试数据': 'username=13333333333,password=ty123456', '期望结果': '', '备注': '登录功能测试', '描述': '自动登录测试'}" ]
}